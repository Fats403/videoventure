name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  ORGANIZATION: fats403

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build shared package
        run: npm run build -- --filter=@video-venture/shared

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        run: echo "version=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/videoventure-api:${{ steps.meta.outputs.version }},${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/videoventure-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Worker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/worker/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/videoventure-worker:${{ steps.meta.outputs.version }},${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/videoventure-worker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Bull Board image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/bull-board/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/videoventure-bull-board:${{ steps.meta.outputs.version }},${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/videoventure-bull-board:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create deployment file
        env:
          VERSION: ${{ steps.meta.outputs.version }}
        run: |
          echo "TAG=$VERSION" > .env.deploy
          echo "DOCKER_REGISTRY=${{ env.REGISTRY }}/${{ env.ORGANIZATION }}" >> .env.deploy

      - name: Upload deployment file
        uses: actions/upload-artifact@v4
        with:
          name: deployment-files
          path: .env.deploy

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download deployment file
        uses: actions/download-artifact@v4
        with:
          name: deployment-files

      - name: Copy deployment file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: ".env.deploy"
          target: "/opt/videoventure"
          strip_components: 0

      - name: Execute deployment script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            cd /opt/videoventure
            chmod +x scripts/deploy.sh
            ./scripts/deploy.sh
